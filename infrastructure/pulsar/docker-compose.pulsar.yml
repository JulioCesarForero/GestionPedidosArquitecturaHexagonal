# GestionPedidosArquitecturaHexagonal/infrastructure/pulsar/docker-compose.pulsar.yml
# infrastructure/pulsar/docker-compose.pulsar.yml

version: '3.8'

services:
  pulsar:
    image: apachepulsar/pulsar:3.1.0
    ports:
      - "6650:6650"   # Broker port
      - "8080:8080"   # Web admin port
    environment:
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    command: >
      /bin/bash -c "bin/apply-config-from-env.py conf/standalone.conf &&
      bin/pulsar standalone"
    volumes:
      - pulsar_data:/pulsar/data
      - pulsar_conf:/pulsar/conf
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "bin/pulsar-admin", "brokers", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Pulsar Manager (opcional, interfaz web para administraci√≥n)
  pulsar-manager:
    image: apachepulsar/pulsar-manager:v0.4.0
    ports:
      - "9527:9527"   # Web UI port
    depends_on:
      - pulsar
    environment:
      - SPRING_CONFIGURATION_FILE=/pulsar-manager/pulsar-manager/application.properties
    volumes:
      - pulsar_manager_data:/data
    networks:
      - microservices-net
    restart: unless-stopped

networks:
  microservices-net:
    external: true

volumes:
  pulsar_data:
    name: ${PULSAR_DATA_VOLUME_NAME:-pulsar_data}
  pulsar_conf:
    name: ${PULSAR_CONF_VOLUME_NAME:-pulsar_conf}
  pulsar_manager_data:
    name: ${PULSAR_MANAGER_VOLUME_NAME:-pulsar_manager_data}